[{"F:\\react\\mern-proshop\\frontend\\src\\index.js":"1","F:\\react\\mern-proshop\\frontend\\src\\App.js":"2","F:\\react\\mern-proshop\\frontend\\src\\components\\Footer.js":"3","F:\\react\\mern-proshop\\frontend\\src\\components\\Header.js":"4","F:\\react\\mern-proshop\\frontend\\src\\screens\\HomeScreen.js":"5","F:\\react\\mern-proshop\\frontend\\src\\screens\\ProductScreen.js":"6","F:\\react\\mern-proshop\\frontend\\src\\components\\Product.js":"7","F:\\react\\mern-proshop\\frontend\\src\\products.js":"8","F:\\react\\mern-proshop\\frontend\\src\\components\\Rating.js":"9","F:\\react\\mern-proshop\\frontend\\src\\store.js":"10","F:\\react\\mern-proshop\\frontend\\src\\reducers\\productReducers.js":"11","F:\\react\\mern-proshop\\frontend\\src\\constants\\productConstants.js":"12","F:\\react\\mern-proshop\\frontend\\src\\actions\\productActions.js":"13","F:\\react\\mern-proshop\\frontend\\src\\components\\Message.js":"14","F:\\react\\mern-proshop\\frontend\\src\\components\\Loader.js":"15","F:\\react\\mern-proshop\\frontend\\src\\reducers\\cartReducers.js":"16","F:\\react\\mern-proshop\\frontend\\src\\screens\\CartScreen.js":"17","F:\\react\\mern-proshop\\frontend\\src\\constants\\cartConstants.js":"18","F:\\react\\mern-proshop\\frontend\\src\\actions\\cartActions.js":"19","F:\\react\\mern-proshop\\frontend\\src\\reducers\\userReducers.js":"20","F:\\react\\mern-proshop\\frontend\\src\\constants\\userConstants.js":"21","F:\\react\\mern-proshop\\frontend\\src\\screens\\LoginScreen.js":"22","F:\\react\\mern-proshop\\frontend\\src\\components\\FormContainer.js":"23","F:\\react\\mern-proshop\\frontend\\src\\actions\\userActions.js":"24","F:\\react\\mern-proshop\\frontend\\src\\screens\\RegisterScreen.js":"25","F:\\react\\mern-proshop\\frontend\\src\\screens\\ProfileScreen.js":"26","F:\\react\\mern-proshop\\frontend\\src\\screens\\ShippingScreen.js":"27","F:\\react\\mern-proshop\\frontend\\src\\components\\CheckoutSteps.js":"28","F:\\react\\mern-proshop\\frontend\\src\\screens\\PaymentScreen.js":"29","F:\\react\\mern-proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","F:\\react\\mern-proshop\\frontend\\src\\reducers\\orderReducers.js":"31","F:\\react\\mern-proshop\\frontend\\src\\constants\\orderConstants.js":"32","F:\\react\\mern-proshop\\frontend\\src\\actions\\orderActions.js":"33","F:\\react\\mern-proshop\\frontend\\src\\screens\\OrderScreen.js":"34"},{"size":337,"mtime":1609953512996,"results":"35","hashOfConfig":"36"},{"size":1842,"mtime":1612371493575,"results":"37","hashOfConfig":"36"},{"size":333,"mtime":1609660437064,"results":"38","hashOfConfig":"36"},{"size":2574,"mtime":1611766163416,"results":"39","hashOfConfig":"36"},{"size":1105,"mtime":1609956914067,"results":"40","hashOfConfig":"36"},{"size":5868,"mtime":1610043500408,"results":"41","hashOfConfig":"36"},{"size":837,"mtime":1609660437068,"results":"42","hashOfConfig":"36"},{"size":2566,"mtime":1609666383839,"results":"43","hashOfConfig":"44"},{"size":2472,"mtime":1611483267503,"results":"45","hashOfConfig":"36"},{"size":1845,"mtime":1612677888348,"results":"46","hashOfConfig":"36"},{"size":1111,"mtime":1609957492569,"results":"47","hashOfConfig":"36"},{"size":366,"mtime":1609957204851,"results":"48","hashOfConfig":"36"},{"size":1361,"mtime":1609957735589,"results":"49","hashOfConfig":"36"},{"size":268,"mtime":1609956799624,"results":"50","hashOfConfig":"36"},{"size":347,"mtime":1609956553924,"results":"51","hashOfConfig":"36"},{"size":1461,"mtime":1612101632981,"results":"52","hashOfConfig":"36"},{"size":6169,"mtime":1610864241326,"results":"53","hashOfConfig":"36"},{"size":238,"mtime":1612101399745,"results":"54","hashOfConfig":"36"},{"size":1359,"mtime":1612101622675,"results":"55","hashOfConfig":"36"},{"size":2262,"mtime":1612680237676,"results":"56","hashOfConfig":"36"},{"size":890,"mtime":1612680169870,"results":"57","hashOfConfig":"36"},{"size":2750,"mtime":1611765101741,"results":"58","hashOfConfig":"36"},{"size":347,"mtime":1611477399882,"results":"59","hashOfConfig":"36"},{"size":4316,"mtime":1612697136276,"results":"60","hashOfConfig":"36"},{"size":3987,"mtime":1611856057251,"results":"61","hashOfConfig":"36"},{"size":8094,"mtime":1612679916326,"results":"62","hashOfConfig":"36"},{"size":3106,"mtime":1612100123024,"results":"63","hashOfConfig":"36"},{"size":1618,"mtime":1612100101061,"results":"64","hashOfConfig":"36"},{"size":2182,"mtime":1612101777779,"results":"65","hashOfConfig":"36"},{"size":7607,"mtime":1612198119355,"results":"66","hashOfConfig":"36"},{"size":2836,"mtime":1612680140048,"results":"67","hashOfConfig":"36"},{"size":804,"mtime":1612680081016,"results":"68","hashOfConfig":"36"},{"size":3909,"mtime":1612678147247,"results":"69","hashOfConfig":"36"},{"size":10586,"mtime":1612545579600,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1fu3nqo",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"15v6rrh",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"73"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"73"},"F:\\react\\mern-proshop\\frontend\\src\\index.js",[],["143","144"],"F:\\react\\mern-proshop\\frontend\\src\\App.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\Footer.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\Header.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\HomeScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\ProductScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\Product.js",[],"F:\\react\\mern-proshop\\frontend\\src\\products.js",[],["145","146"],"F:\\react\\mern-proshop\\frontend\\src\\components\\Rating.js",[],"F:\\react\\mern-proshop\\frontend\\src\\store.js",[],"F:\\react\\mern-proshop\\frontend\\src\\reducers\\productReducers.js",[],"F:\\react\\mern-proshop\\frontend\\src\\constants\\productConstants.js",[],"F:\\react\\mern-proshop\\frontend\\src\\actions\\productActions.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\Message.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\Loader.js",[],"F:\\react\\mern-proshop\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\CartScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\constants\\cartConstants.js",[],"F:\\react\\mern-proshop\\frontend\\src\\actions\\cartActions.js",[],"F:\\react\\mern-proshop\\frontend\\src\\reducers\\userReducers.js",[],"F:\\react\\mern-proshop\\frontend\\src\\constants\\userConstants.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\FormContainer.js",[],"F:\\react\\mern-proshop\\frontend\\src\\actions\\userActions.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\ProfileScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["147","148"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItem.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            // dispatch({ type: USER_DETAILS_RESET })\r\n            // dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItem,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItem.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItem.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && (\r\n                                    <Message variant=\"danger\">{error}</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"btn-block\"\r\n                                    disabled={cart.cartItem === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","F:\\react\\mern-proshop\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\react\\mern-proshop\\frontend\\src\\constants\\orderConstants.js",[],"F:\\react\\mern-proshop\\frontend\\src\\actions\\orderActions.js",[],"F:\\react\\mern-proshop\\frontend\\src\\screens\\OrderScreen.js",["149"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    // deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    // ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    // const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    // const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce(\r\n                (acc, item) => acc + item.price * item.qty,\r\n                0\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            // dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    // const deliverHandler = () => {\r\n    //     dispatch(deliverOrder(order))\r\n    // }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">\r\n                                    Not Delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {/* {loadingDeliver && <Loader />} */}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={() =>\r\n                                                console.log('diliver')\r\n                                            }\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":28},{"ruleId":"156","severity":1,"message":"160","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":80,"column":8,"nodeType":"163","endLine":80,"endColumn":46,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],"no-unused-vars","'ORDER_CREATE_RESET' is defined but never used.","Identifier","unusedVar","'USER_DETAILS_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"170","text":"171"},[2624,2662],"[dispatch, orderId, successPay, order, userInfo, history]"]